
###########
# 1: Functions
#
# Fvwm can use custom functions for various tasks.
# The syntax for defining a function named FunctionName is:
#
#   DestroyFunc FunctionName
#   AddToFunc FunctionName
#   + I [Action to do Immediately]
#   + C [Action to do on a Mouse Click]
#   + D [Action to do on a Mouse Double Click]
#   + H [Action to do on a Mouse Hold]
#   + M [Action to do on a Mouse Motion]
###########

# Frame dimension variables for consistent calculations
SetEnv BorderWidth 5
SetEnv HandleWidth 5 
SetEnv TitleHeight 18

# StartFunction moved to start.conf

# Function to set background when fvwm starts
DestroyFunc InitBackground
AddToFunc InitBackground
+ I Test (f $[FVWM_USERDIR]/.BGdefault) \
    Exec exec fvwm3-root $[FVWM_USERDIR]/.BGdefault
+ I TestRc (NoMatch) Exec exec fvwm3-root \
    $[FVWM_DATADIR]/default-config/images/background/bg1.png

# Mouse Bindings Functions
DestroyFunc RaiseMoveX
AddToFunc RaiseMoveX
+ I Raise
+ M $0
+ D $1

DestroyFunc RaiseMove
AddToFunc RaiseMove
+ I Raise
+ M $0

DestroyFunc MoveToCurrent
AddToFunc MoveToCurrent
+ I ThisWindow MoveToPage
+ I ThisWindow MoveToDesk

# Function: SetBG $0
#
# SetBG is used with the background menu to set the background
# image and configure it to be loaded the next time fvwm is run.
# Note, fvwm3-root can't use .jpeg or resize images. Use something
# like display, feh, etc.
DestroyFunc SetBG
AddToFunc   SetBG
+ I Test (f $[FVWM_USERDIR]/images/background/$0) \
    Exec exec fvwm3-root $[FVWM_USERDIR]/images/background/$0
+ I TestRc (Match) Exec exec ln -fs images/background/$0 \
    $[FVWM_USERDIR]/.BGdefault
+ I TestRc (Match) Break
+ I Test (!f $[FVWM_DATADIR]/default-config/images/background/$0) Break
+ I Exec exec fvwm3-root $[FVWM_DATADIR]/default-config/images/background/$0
+ I Exec exec ln -fs $[FVWM_DATADIR]/default-config/images/background/$0 \
    $[FVWM_USERDIR]/.BGdefault


# Function: IconManClick
#
# This function is run from FvwmIconMan when the button is clicked.
DestroyFunc IconManClick
AddToFunc   IconManClick
+ I ThisWindow (Raised, !Shaded, !Iconic, CurrentPage, AnyScreen) Iconify
+ I TestRc (Match) Break
+ I ThisWindow WindowShade off
+ I ThisWindow Iconify off
+ I ThisWindow Raise
+ I ThisWindow (AcceptsFocus) FlipFocus

# Function: ToggleTitle
#
# This function will toggle if fvwm shows the TitleBar.
DestroyFunc ToggleTitle
AddToFunc   ToggleTitle
+ I ThisWindow (HasTitle) WindowStyle !Title
+ I TestRc (NoMatch) WindowStyle Title

# Function: MaximizeFull
#
# Temporarily ignore the working area (struts) and maximize to 100% of the screen,
# accounting for window frame dimensions (borders and title bar).
DestroyFunc MaximizeFull
AddToFunc   MaximizeFull
 + I PipeRead 'border=$[BorderWidth]; title=$[TitleHeight]; handle=$[HandleWidth]; \
   width=$(($[vp.width] - 2 * border)); height=$(($[vp.height] - title - handle)); \
   echo "ThisWindow ResizeMove ${width}p ${height}p ${border}p ${title}p"'

# Function: NextPage2x2
# Cycles pages on a 2x2 DesktopSize in order:
# (0,0) -> (1,0) -> (0,1) -> (1,1) -> (0,0)
DestroyFunc NextPage2x2
AddToFunc   NextPage2x2
 + I PipeRead 'px=$(( $[vp.x] / $[vp.width] )); \
                                py=$(( $[vp.y] / $[vp.height] )); \
                                case "$px,$py" in \
                                    0,0) echo GotoPage 1 0 ;; \
                                    1,0) echo GotoPage 0 1 ;; \
                                    0,1) echo GotoPage 1 1 ;; \
                                    1,1) echo GotoPage 0 0 ;; \
                                    *)   echo GotoPage 0 0 ;; \
                                esac'
